# This file is part of Percona Server for MongoDB.
#
# Copyright (C) 2025-present Percona and/or its affiliates. All rights reserved.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the Server Side Public License, version 1,
#    as published by MongoDB, Inc.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    Server Side Public License for more details.
#
#    You should have received a copy of the Server Side Public License
#    along with this program. If not, see
#    <http://www.mongodb.com/licensing/server-side-public-license>.
#
#    As a special exception, the copyright holders give permission to link the
#    code of portions of this program with the OpenSSL library under certain
#    conditions as described in each individual source file and distribute
#    linked combinations including the program with the OpenSSL library. You
#    must comply with the Server Side Public License in all respects for
#    all of the code used other than as permitted herein. If you modify file(s)
#    with this exception, you may extend this exception to your version of the
#    file(s), but you are not obligated to do so. If you do not wish to do so,
#    delete this exception statement from your version. If you delete this
#    exception statement from all source files in the program, then also delete
#    it in the license file.
#

global:
  cpp_namespace: mongo
  cpp_includes:
    - "mongo/db/auth/oidc/match_pattern.h"

imports:
  - "mongo/db/basic_types.idl"

types:
  MatchPattern:
    description: "Serializable regular expression."
    bson_serialization_type: string
    cpp_type: "mongo::MatchPattern"
    serializer: "mongo::MatchPattern::toString"
    deserializer: "mongo::MatchPattern::fromString"
    is_view: false

structs:
  OidcIdentityProviderConfig:
    description: Configuration of an individual OIDC identity provider (IdP)
    strict: true
    fields:
      issuer:
        type: string
      authNamePrefix:
        type: string
      matchPattern:
        type: MatchPattern
        optional: true  # conditional
      clientId:
        type: string
        optional: true  # conditional
      audience:
        type: string
      requestScopes:
        type: array<string>
        optional: true
      principalName:
        type: string
        default: '"sub"'
      useAuthorizationClaim:
        type: bool
        default: true
      authorizationClaim:
        type: string
        optional: true  # conditional
      logClaims:
        type: array<string>
        optional: true
      JWKSPollSecs:
        type: int
        default: 0
        validator:
          gte: 0
      supportsHumanFlows:
        type: bool
        default: true

server_parameters:
  oidcIdentityProviders:
    description: >-
      identity provider (IdP) configurations for OpenID Connect Authentication
    set_at: startup
    cpp_class:
      name: "OidcIdentityProvidersServerParameter"
      data: "std::vector<OidcIdentityProviderConfig>"
      override_set: true
    redact: false
